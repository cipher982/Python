/* Charts a simulated stock return over a period of 5000 days, the price can move up or down by -5,-2,-1,0,1,2, or 5 each
day. Running it over and over can create wildly different returns, displaying just how possible it is for a market equity
to have large swings that may not be possible to fundamentally or technically explain, though humans will strive to find
a pattern in the chaos anyways. The array can be set at any length you feel, try it out to see if you can notice anything
different.

* I do not necessarily subscribe to an efficient market hypothesis. Whether or not markets or individual stocks may be
soundly predictable, there is analysis done to show that at least a sizable amount of it is not at the least purely 
random (accounting for drift or stochastic volatility over time),  or as in popular parlance 'A Random Walk'.*/

import matplotlib.pyplot as plt
import random

# Make matplotlib show our plots inline (good for working with notebooks)
%matplotlib inline

# Can use any length of number here, be sure to alter lines 8 and 10
stocks = [0] * 5000
i = 2
while i < len(stocks):
    direction = random.randint(1,7)
    if direction == 1:
        stocks[i] = stocks[i-1] - 2
    if direction == 2:
        stocks[i] = stocks[i-1] - 1
    if direction == 3:
        stocks[i] = stocks[i-1]
    if direction == 4:
        stocks[i] = stocks[i-1] + 1
    if direction == 5:
        stocks[i] = stocks[i-1] + 2
    if direction == 6:
        stocks[i] = stocks[i-1] + 5
    if direction == 7:
        stocks[i] = stocks[i-1] - 5
    i += 1

plt.plot(stocks)
